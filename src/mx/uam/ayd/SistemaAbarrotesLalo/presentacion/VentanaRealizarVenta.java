/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.uam.ayd.SistemaAbarrotesLalo.presentacion;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.uam.ayd.SistemaAbarrotesLalo.modelo.Producto;

/**
 *
 * @author alumnocbi
 */
public class VentanaRealizarVenta extends javax.swing.JFrame  {
ControlVentas controlVenta1=new ControlVentas();
listener listener1= new listener();
ArrayList<String> productos= new ArrayList<String>();
ArrayList<Integer> cantidades= new ArrayList<Integer>();
double monto, aux;
LocalDate fechaActual = LocalDate.now();
    int dia = fechaActual.getDayOfMonth();
    int mes = fechaActual.getMonthValue();
    int año = fechaActual.getYear();
    Date fecha;
    DefaultTableModel modelo;
    
    /**
     * Creates new form VentanaRealizarVenta
     */
    public VentanaRealizarVenta(ControlVentas controlVenta1) {
        this.controlVenta1=controlVenta1; 
        addWindowListener(listener1);
        initComponents();
        modelo=(DefaultTableModel) jTableInformacionVenta.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInformacionVenta = new javax.swing.JTable();
        jButtonVolverAlMenu = new javax.swing.JButton();
        jButtonConfirmarVenta = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldCantidad = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema Administrador de Abarrotes Lalo");

        jLabel1.setFont(new java.awt.Font("Zapfino", 0, 33)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Ventas");

        jTableInformacionVenta.setFont(new java.awt.Font("Luminari", 0, 12)); // NOI18N
        jTableInformacionVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nombre del producto", "Cantidad", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableInformacionVenta);

        jButtonVolverAlMenu.setText("Volver al menú");
        jButtonVolverAlMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverAlMenuActionPerformed(evt);
            }
        });

        jButtonConfirmarVenta.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonConfirmarVenta.setText("Confirmar venta");
        jButtonConfirmarVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmarVentaActionPerformed(evt);
            }
        });

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Nombre del producto");

        jLabel3.setText("Cantidad");

        jTextFieldCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCantidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNombre)
                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonVolverAlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonConfirmarVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAgregar)))
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(262, 262, 262))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jButtonAgregar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVolverAlMenu)
                    .addComponent(jButtonConfirmarVenta))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverAlMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverAlMenuActionPerformed
        dispose();
        controlVenta1.finalizaControl();
    }//GEN-LAST:event_jButtonVolverAlMenuActionPerformed

    private void jTextFieldCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCantidadActionPerformed
      
      
    }//GEN-LAST:event_jTextFieldCantidadActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        String producto = jTextFieldNombre.getText();
        String cantidad = jTextFieldCantidad.getText();
        int cantidadProducto;
        double precio=0;
        boolean sinError = muestraError(revisarFormato(producto, cantidad));
        if (sinError = true) {            
       cantidadProducto = Integer.parseInt(cantidad);
            try {
                precio=controlVenta1.verificaVenta(producto,cantidadProducto );
            } catch (SQLException ex) {
                Logger.getLogger(VentanaRealizarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
            
          if(precio<=0){
            if(precio==-1){
              muestraError(5);
          }  
          if(precio==-2){
              muestraError(6);
          }
          }else{
          precio=cantidadProducto*precio;    
          modelo.addRow(new Object[]{producto,cantidadProducto,precio});
          productos.add(producto);
          cantidades.add(cantidadProducto);
          aux=aux+precio;
          }
          
        }
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonConfirmarVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmarVentaActionPerformed
      
      monto=aux;
      aux=0;
      limpiarTabla();
      boolean estado;
    try {
        estado = controlVenta1.confirmarVenta(productos,monto,fechaActual,cantidades);
    } catch (SQLException ex) {
        Logger.getLogger(VentanaRealizarVenta.class.getName()).log(Level.SEVERE, null, ex);
    }
      if(estado=true){
          JOptionPane.showMessageDialog(null, "Tu venta se ha registrado existosamente dentro del sistema", "Venta existosa", JOptionPane.INFORMATION_MESSAGE);
      }else{
         JOptionPane.showMessageDialog(null, "Tu venta no se ha registrado existosamente dentro del sistema", "Venta fallida", JOptionPane.ERROR_MESSAGE); 
      }
     
    }//GEN-LAST:event_jButtonConfirmarVentaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRealizarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRealizarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRealizarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRealizarVenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonConfirmarVenta;
    private javax.swing.JButton jButtonVolverAlMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableInformacionVenta;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

    
    public int revisarFormato(String producto, String cantidad) {
        if (producto.isEmpty() && cantidad.isEmpty()) {
            return 1;
        }
        int aux;
        try {
            aux = Integer.parseInt(cantidad);
        } catch (NumberFormatException ex) {
            return 2;
        }
        if (aux <= 0) {
            return 3;
        }
        try {
            aux = Integer.parseInt(producto);
            return 4;
        } catch (NumberFormatException ex) {
        }
        return 0;
    }

    public boolean muestraError(int revisarFormato) {
        if (revisarFormato == 1) {
            JOptionPane.showMessageDialog(null, "Los datos estan incompletos", "No se puede agregar producto", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (revisarFormato == 2) {
            JOptionPane.showMessageDialog(null, "La cantidad debe ser expresada en numeros enteros y positivos", "No se puede agregar producto", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (revisarFormato == 3) {
            JOptionPane.showMessageDialog(null, "La cantidad debe ser expresada en numeros positivos y mayores que cero", "No se puede agregar producto", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (revisarFormato == 4) {
            JOptionPane.showMessageDialog(null, "Coloca adecuandamente el nombre del producto", "No se puede agregar producto", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (revisarFormato == 5) {
            JOptionPane.showMessageDialog(null, "El producto ingresado no se encuentra registrado en el sistema", "No se puede agregar producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (revisarFormato == 6) {
            JOptionPane.showMessageDialog(null, "El producto no tiene las existencias suficientes para cubrir la venta", "No se puede agregar producto", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    public void limpiarTabla() {
        int filas=modelo.getRowCount();
        for(int i=0; i<filas; i++){
           modelo.removeRow(0);           
        }
    }

}

